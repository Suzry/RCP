import sys
import time
from xmlrpc.client import ServerProxy

def main():
    if len(sys.argv) < 3:
        print("Usage: python client.py <room_name> <username>")
        sys.exit(1)

    room_name = sys.argv[1]
    username = sys.argv[2]

    server = ServerProxy("http://localhost:8000/RPC2", allow_none=True)

    rooms = server.list_rooms()
    if room_name not in rooms:
        print(f"Chat room '{room_name}' does not exist. Creating it...")
        server.create_room(room_name)

    connected = server.connect(room_name, username)
    if not connected:
        print(f"Could not connect. User '{username}' is already in the chat room '{room_name}'.")
        sys.exit(1)
    else:
        print(f"Connected to chat room '{room_name}' as '{username}'.")

    try:
        while True:
            messages = server.get_messages(room_name)
            print(f"\n=== Chat History for {room_name} ===")
            for msg in messages:
                print(msg)
            print("===================================\n")

            print("Available commands:")
            print("  /say <message>      Send a message")
            print("  /who                List participants")
            print("  /leave              Leave the chat")
            print("  /rooms              List available chat rooms")
            print("  (Or just press Enter to refresh)")

            user_input = input("Enter command: ").strip()

            if not user_input:
                continue

            if user_input.startswith("/say "):
                _, message = user_input.split(" ", 1)
                server.say(room_name, username, message)

            elif user_input == "/who":
                participants = server.who(room_name)
                print(f"Currently in '{room_name}':", ", ".join(participants))

            elif user_input == "/rooms":
                rooms = server.list_rooms()
                print("Available chat rooms:", ", ".join(rooms))

            elif user_input == "/leave":
                server.leave(room_name, username)
                print(f"You have left '{room_name}'. Exiting.")
                break

            else:
                print("Unknown command.")

            time.sleep(1)

    except KeyboardInterrupt:
        server.leave(room_name, username)
        print(f"\nExiting '{room_name}' chat...")

if __name__ == "__main__":
    main()
